{"version":3,"file":"sceneview.js","sourceRoot":"","sources":["sceneview.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAG,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7D,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAGzC,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,UAAU;IAK9B,MAAM,KAAK,MAAM;QACpB,OAAO,CAAC,MAAM,CAAC,CAAC;IACpB,CAAC;IAGD,IAAW,KAAK,CAAC,IAAU;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAGD,IAAW,QAAQ,CAAC,KAAe;QAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,MAAM;QACF,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,IAAI,CAAA,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK;sBACzB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAW,EAAE,EAAE;gBAC1C,MAAM,OAAO,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;gBACjE,OAAO,IAAI,CAAA,aAAa,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;YAAC,CAAC,CAAC,OAAO,CAAC;SAC9E;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ,CAAA;AArBG;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;sCAK5C;AAGD;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;yCAI5C;AApBQ,SAAS;IADrB,aAAa,CAAC,iBAAiB,CAAC;GACpB,SAAS,CA+BrB;SA/BY,SAAS","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement , property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styles } from './sceneview.css';\n\n@customElement('socks-sceneview')\nexport class SceneView extends LitElement {\n    protected _scene: any;\n\n    protected _selected: any;\n\n    public static get styles() {\n        return [styles];\n    }\n\n    @property({ attribute: true, reflect: true })\n    public set scene(data: JSON) {\n        this._scene = data;\n        this._selected = this._scene.selected;\n        this.requestUpdate();\n    }\n\n    @property({ attribute: true, reflect: true })\n    public set selected(items: string[]) {\n        this._selected = items;\n        this.requestUpdate();\n    }\n\n    render() {\n        if (this._scene) {\n            return html`<h4>${this._scene.scene}</h4>\n                <ul>${this._scene.objects.map((obj: string) => {\n                    const classes = { selected: this._selected.indexOf(obj) !== -1 };\n                    return html`<li class=${classMap(classes)}>${obj}</li>`; })}</ul>`;\n        }\n        return undefined;\n    }\n}\n"]}