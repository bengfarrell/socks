{"version":3,"file":"connector.js","sourceRoot":"","sources":["connector.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { styles } from './connector.css';\nimport { Connection } from '../../connection';\nimport { BlenderCommand } from '../../blender-command';\nimport { ConnectionEvent } from './connectionevent';\nimport { BlenderEvent } from '../../blender-event';\nimport { SceneView } from '../sceneview/sceneview';\n\n@customElement('socks-connector')\nexport class ConnectorComponent extends LitElement {\n  /**\n   * host to use\n   */\n  @property()\n  public host: string = Connection.DEFAULT_HOST;\n\n  /**\n   * port to use\n   */\n  @property()\n  public port: number = Connection.DEFAULT_PORT;\n\n  /**\n   * autoconnect when component is added to the dom\n   */\n  @property({ attribute: true, reflect: true, type: Boolean })\n  public autoconnect: boolean = false;\n\n  /**\n   * show last activity in text\n   */\n  @property({ attribute: true, reflect: true, type: Boolean })\n  public showActivity: boolean = false;\n\n  /**\n   * status of connection\n   */\n  @property({ attribute: true, reflect: true })\n  public get status(): string {\n    return this._status;\n  }\n\n  @query('#status')\n  protected statusEl?: HTMLElement;\n\n  @query('socks-sceneview')\n  protected sceneViewEl?: SceneView;\n\n  protected connection?: Connection;\n\n  protected _status: 'connected' | 'pending' | 'none' = 'none';\n\n  protected lastActivity?: string;\n\n  public static get styles() {\n    return [styles];\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (this.autoconnect) {\n      this.connect(this.host, this.port);\n    }\n  }\n\n  protected render() {\n    return html`<div id=\"status\"></div>\n      <button\n        @click=${() => {\n          if (this.connection?.connected) {\n            this.connection.close();\n            return;\n          }\n          this.connect(this.host, this.port);\n        }}\n      >\n        ${this.connection?.connected ? 'disconnect' : 'connect'}\n      </button>\n      <input\n        type=\"text\"\n        value=${this.host}\n        @change=${(event: InputEvent) => {\n          this.host = (event.currentTarget as HTMLInputElement)?.value;\n        }}\n      />\n      &nbsp:&nbsp\n      <input\n        type=\"number\"\n        value=${this.port}\n        @change=${(event: InputEvent) => {\n          this.port = Number((event.currentTarget as HTMLInputElement)?.value);\n        }}\n      />\n        <button ?disabled=${!this.connection?.connected} @click=${() => {\n          this.connection?.send(BlenderCommand.requestScene())\n        }}>Get Scene</button>\n        <button ?disabled=${!this.connection?.connected} @click=${() => {\n          this.connection?.send(BlenderCommand.requestSelection())\n        }}>Get Selection</button>\n        ${this.showActivity ? html`<br /><span id='activity'>${this.lastActivity}</span>` : undefined}\n        <socks-sceneview></socks-sceneview>`;\n  }\n\n  public send(commands: BlenderCommand[] | BlenderCommand) {\n    if (this.connection) {\n      this.statusEl?.classList.toggle('active', false);\n      requestAnimationFrame(() => {\n        this.statusEl?.classList.toggle('active', true);\n      });\n      this.connection.send(commands);\n      this.lastActivity = `Sent command to Blender}`;\n      this.requestUpdate('status');\n      this.requestUpdate('lastActivity');\n    }\n  }\n\n  public connect(host: string, port: number) {\n    this._status = 'pending';\n    this.requestUpdate('status');\n    this.connection = new Connection(host, port);\n    this.connection.addEventListener('open', () => {\n      this._status = 'connected';\n      this.lastActivity = `Connected to ${host}:${port}`;\n      this.requestUpdate('status');\n      this.requestUpdate('lastActivity');\n      this.sendEvent(ConnectionEvent.OPEN);\n    });\n\n    this.connection.addEventListener('close', () => {\n      this._status = 'none';\n      this.lastActivity = `Connection closed`;\n      this.requestUpdate('status');\n      this.requestUpdate('lastActivity');\n      this.sendEvent(ConnectionEvent.CLOSE);\n    });\n\n    this.connection.addEventListener('error', (e: Event) => {\n      this.lastActivity = `Cannot connect to ${(e.currentTarget as WebSocket).url}`;\n      // eslint-disable-next-line no-console\n      console.warn(this.lastActivity);\n      this.statusEl?.classList.toggle('error', false);\n      requestAnimationFrame(() => {\n        this.statusEl?.classList.toggle('error', true);\n      });\n      this.requestUpdate('status');\n      this.requestUpdate('lastActivity');\n      this.sendEvent(ConnectionEvent.ERROR);\n    });\n\n    this.connection.addEventListener(BlenderEvent.BLENDER_MESSAGE, (e: BlenderEvent) => {\n      if (this.sceneViewEl) {\n        if (e.scene) {\n          this.sceneViewEl.scene = e.scene;\n        }\n        if (e.selected) {\n          this.sceneViewEl.selected = e.selected;\n        }\n      }\n      this.dispatchEvent(e as Event);\n    });\n  }\n\n  sendEvent(type: string) {\n    const event: ConnectionEvent = new ConnectionEvent(type, { bubbles: true, composed: true, cancelable: true});\n    event.component = this;\n    event.connection = this.connection;\n    this.dispatchEvent(event);\n  }\n}\n"]}