{"version":3,"file":"blender-command.js","sourceRoot":"","sources":["blender-command.ts"],"names":[],"mappings":"AAgEA,MAAM,CAAC,MAAM,iBAAiB,GAAG,wBAAwB,CAAC;AAE1D,MAAM,OAAO,cAAc;IACvB,MAAM,CAAC,YAAY;QACf,OAAO;YACH,OAAO,EAAE,WAAW;SACvB,CAAA;IACL,CAAC;IAED,MAAM,CAAC,gBAAgB;QACnB,OAAO;YACH,OAAO,EAAE,eAAe;SAC3B,CAAA;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,MAAoB;QAC9B,MAAM,OAAO,GAAkB;YAC3B,OAAO,EAAE,QAAQ;YACjB,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YACtE,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;SACzF,CAAC;QACF,IAAI,MAAM,CAAC,QAAQ,EAAE;YACjB,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACtC;QACD,IAAI,MAAM,CAAC,QAAQ,EAAE;YACjB,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACtC;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,MAAoB;QAC9B,OAAO;YACH,OAAO,EAAE,QAAQ;YACjB,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;SACzE,CAAC;IACN,CAAC;CACJ","sourcesContent":["export interface Transform {\n    transform: string;\n    relative?: boolean;\n    x?: number;\n    y?: number;\n    z?: number;\n}\n\nexport interface Translate extends Transform {\n    transform: 'translate';\n}\n\nexport interface Scale extends Transform {\n    transform: 'scale';\n}\n\nexport interface Rotate extends Transform {\n    transform: 'rotate';\n    w?: number;\n    order?: 'xyz' | 'zyx';\n}\n\nexport interface DeleteParams {\n    // target of transforms (object name)\n    target: string | string[],\n}\n\nexport interface UpdateParams {\n    // target of transforms (object name)\n    target: string | string[],\n\n    // list of transforms to apply in order to object\n    transforms: (Translate | Scale | Rotate) | (Translate | Scale | Rotate)[],\n\n    // keyframe if animating\n    keyframe?: number,\n\n    // use template if target is not found\n    template?: string,\n}\n\ninterface UpdateCommand {\n    command: 'update',\n\n    // target of transforms (object name)\n    target: string[],\n\n    // list of transforms to apply in order to object\n    transforms: (Translate | Scale | Rotate)[],\n\n    // keyframe if animating\n    keyframe?: number,\n\n    // use template if target is not found\n    template?: string,\n}\n\ninterface DeleteCommand {\n    command: 'delete',\n\n    // target of deletes (object name)\n    target: string[],\n}\n\nexport const CURRENT_SELECTION = '__$current_selection__';\n\nexport class BlenderCommand {\n    static requestScene() {\n        return {\n            command: 'sceneinfo',\n        }\n    }\n\n    static requestSelection() {\n        return {\n            command: 'selectioninfo',\n        }\n    }\n\n    static update(params: UpdateParams): UpdateCommand {\n        const command: UpdateCommand = {\n            command: 'update',\n            target: Array.isArray(params.target) ? params.target : [params.target],\n            transforms: Array.isArray(params.transforms) ? params.transforms : [params.transforms],\n        };\n        if (params.keyframe) {\n            command.keyframe = params.keyframe;\n        }\n        if (params.template) {\n            command.template = params.template;\n        }\n        return command;\n    }\n\n    static delete(params: DeleteParams): DeleteCommand {\n        return {\n            command: 'delete',\n            target: Array.isArray(params.target) ? params.target : [params.target],\n        };\n    }\n}\n"]}